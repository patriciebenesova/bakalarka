{"version":3,"sources":["script.js"],"names":[],"mappings":";;AAAA,IAAA,KAAA,GAAA,OAAA,CAAA,OAAA,CAAA,CAAA;;AAEA,IAAA,QAAA,GAAA,OAAA,CAAA,UAAA,CAAA,CAAA;AACA,IAAA,EAAA,GAAA,QAAA,CAAA,eAAA,CAAA;AACA,MAAA,EAAA,OAAA,CAAA,KAAA;AACA,OAAA,EAAA,OAAA,CAAA,MAAA;CACA,CAAA,CAAA;;AAEA,IAAA,EAAA,CAAA;;AAEA,SAAA,IAAA,GAAA;AACA,KAAA,KAAA,EAAA,GAAA,CAAA;;AAEA,GAAA,CAAA,QAAA,CAAA,eAAA,EAAA,UAAA,MAAA,EAAA;AACA,IAAA,CAAA,QAAA,CAAA,eAAA,EAAA,UAAA,IAAA,EAAA;AACA,QAAA,GAAA,cAAA,CAAA,MAAA,EAAA,IAAA,CAAA,CAAA;;AAEA,KAAA,CAAA,QAAA,CAAA,cAAA,EAAA,UAAA,GAAA,EAAA;AACA,OAAA,GAAA,GAAA,CAAA;AACA,MAAA,CAAA,QAAA,CAAA,eAAA,EAAA,UAAA,IAAA,EAAA;AACA,SAAA,IAAA,IAAA,IAAA,EAAA;AACA,cAAA,CAAA,KAAA,EAAA,GAAA,EAAA,IAAA,CAAA,CAAA;MACA,MAAA;AACA,kBAAA,CAAA,KAAA,EAAA,GAAA,CAAA,CAAA;MACA;KACA,CAAA,CAAA;IAEA,CAAA,CAAA;GACA,CAAA,CAAA;EACA,CAAA,CAAA;CACA,CAAA;;AAEA,SAAA,cAAA,CAAA,GAAA,EAAA,CAAA,EAAA;AACA,KAAA,MAAA,CAAA;AACA,KAAA;AACA,MAAA,CAAA,IAAA,EAAA,EAAA;;AAEA,SAAA,GAAA,IAAA,MAAA,CAAA,GAAA,CAAA,CAAA;GACA,MAAA;;AAEA,SAAA,GAAA,IAAA,MAAA,CAAA,GAAA,EAAA,CAAA,CAAA,CAAA;GACA;EACA,CAAA,OAAA,KAAA,EAAA;;AAEA,SAAA,CAAA,GAAA,CAAA,qCAAA,CAAA,CAAA;AACA,MAAA,EAAA,CAAA;EACA;AACA,QAAA,MAAA,CAAA;CACA,CAAA;;AAEA,SAAA,YAAA,CAAA,EAAA,EAAA,GAAA,EAAA;;AAEA,KAAA,EAAA,CAAA,IAAA,CAAA,GAAA,CAAA,EAAA;;AAEA,MAAA,MAAA,GAAA,GAAA,CAAA,KAAA,CAAA,EAAA,CAAA,CAAA;AACA,SAAA,CAAA,GAAA,CAAA,MAAA,CAAA,CAAA;AACA,MAAA,EAAA,CAAA;EACA,MAAA;AACA,SAAA,CAAA,GAAA,CAAA,aAAA,CAAA,CAAA;AACA,MAAA,EAAA,CAAA;EACA;CACA,CAAA;;AAEA,SAAA,QAAA,CAAA,GAAA,EAAA,GAAA,EAAA,IAAA,EAAA;AACA,KAAA,EAAA,CAAA,IAAA,CAAA,GAAA,CAAA,EAAA;AACA,MAAA,MAAA,GAAA,GAAA,CAAA,OAAA,CAAA,GAAA,EAAA,IAAA,CAAA,CAAA;AACA,SAAA,CAAA,GAAA,CAAA,MAAA,CAAA,CAAA;EACA,MAAA;AACA,SAAA,CAAA,GAAA,CAAA,aAAA,CAAA,CAAA;AACA,MAAA,EAAA,CAAA;EACA;CAEA,CAAA","file":"main.js","sourcesContent":["var babel = require(\"babel\");\r\n//interface pro readline\r\nvar readline = require('readline');\r\nvar rl = readline.createInterface({\r\n  input: process.stdin,\r\n  output: process.stdout\r\n});\r\n\r\nmain();\r\n\r\nfunction main(){\r\n\tvar regex, str;\r\n\t//funkce, která přečte regulární výraz\r\n\trl.question('Enter regex: ', function(answer) {\r\n\t\trl.question('Enter flags: ',function(flag){\r\n\t\t\tregex = prevodDoRegexu(answer,flag);\r\n\t\t\t\t//funkce, která přečte zadaný text\r\n\t\t\t\trl.question('Enter text: ', function(ans){\r\n\t\t\t\t\tstr = ans;\r\n\t\t\t\t\trl.question('Replacement: ',function(repl){\r\n\t\t\t\t\t\tif(repl != null){\r\n\t\t\t\t\t\tnahradit(regex,ans,repl);\r\n\t\t\t\t\t\t}else{\r\n\t\t\t\t\t\tzjistitShodu(regex,ans);\r\n\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t\t\r\n\t\t\t\t});\r\n\t\t});\r\n\t});\r\n};\r\n\r\nfunction prevodDoRegexu(reg,f){\r\n\tvar vystup;\r\n\ttry{\r\n\t\tif(f == \"\"){\r\n\t\t\t//zadaný výraz se převede do regulárního výrazu\r\n\t\t\tvystup = new RegExp(reg);\r\n\t\t}else{\r\n\t\t\t//zadaný výraz se převede do regulárního výrazu i s vlaječkou\r\n\t\t\tvystup = new RegExp(reg,f);\t\r\n\t\t}\r\n\t}catch (error){\r\n\t\t//odchycení výjimky SyntaxError\r\n\t\tconsole.log(\"SyntaxError: Nesprávně zadaný výraz\");\r\n\t\tmain();\r\n\t}\r\n\treturn vystup;\r\n};\r\n\r\nfunction zjistitShodu(re,str){\r\n\t//zajistí se, zda daný text odpovídá vzoru\r\n\tif(re.test(str)){\r\n\t\t//vrací substring odpovídající vzoru\r\n\t\tvar newstr = str.match(re);\r\n\t\tconsole.log(newstr);\r\n\t\tmain();\r\n\t}else{\r\n\t\tconsole.log(\"Žádná shoda\");\r\n\t\tmain();\r\n\t}\r\n};\r\n\r\nfunction nahradit(reg,str,repl){\r\n\tif(re.test(str)){\r\nvar newstr = str.replace(reg,repl);\r\nconsole.log(newstr);\r\n}else{\r\n\tconsole.log(\"Žádná shoda\");\r\n\tmain();\r\n}\r\n\r\n};\r\n"],"sourceRoot":"/source/"}